package deepl

import (
	"context"
	"fmt"
	"testing"
)

func TestTranslate(t *testing.T) {
	ctx := context.Background()
	text := "<div data-target=\"readme-toc.content\" class=\"Box-body px-5 pb-5\">\n            <article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h2 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-毕设待吹事项\" class=\"anchor\" aria-hidden=\"true\" href=\"#毕设待吹事项\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>毕设待吹事项</h2>\n<blockquote>\n<p dir=\"auto\">用于项目中的技术点以用于届时写毕设论文</p>\n</blockquote>\n<h5 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-完善的权限控制机制-基于spring-security\" class=\"anchor\" aria-hidden=\"true\" href=\"#完善的权限控制机制-基于spring-security\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>完善的权限控制机制 (基于Spring Security)</h5>\n<ol dir=\"auto\">\n<li>基于 <code>ROLE</code> 的接口权限控制</li>\n<li>基于 JWT 的鉴权机制 (利好分布式)</li>\n<li>灵活配置 CORS 白名单 (以备前后端分离)</li>\n<li>基于 BCryptPasswordEncoder 的密码加密机制</li>\n</ol>\n<blockquote>\n<p dir=\"auto\">这个算法很特别，每次Hash出来都是不一样的结果，但是 matches 却可以成功，可以深入了解下原理</p>\n</blockquote>\n<h5 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-基于贫血模型的mvc框架\" class=\"anchor\" aria-hidden=\"true\" href=\"#基于贫血模型的mvc框架\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a><a href=\"https://zh.wikipedia.org/zh-cn/MVC\" rel=\"nofollow\">基于贫血模型的MVC框架</a></h5>\n<blockquote>\n<p dir=\"auto\">数据流向<br>\nDTO -&gt; Controller -&gt; Service -&gt; DAO -&gt; PO -&gt; Service -&gt; Controller -&gt; VO</p>\n</blockquote>\n<h5 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-orm\" class=\"anchor\" aria-hidden=\"true\" href=\"#orm\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a><a href=\"https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping\" rel=\"nofollow\">ORM</a></h5>\n<blockquote>\n<p dir=\"auto\">技术：JPA<br>\n主要目的是解决在数据库和程序语言间的不匹配问题，通过使用 ORM 技术，可以使得程序员在编写代码时使用对象的形式来操作数据库，而不需要手动编写\nSQL 语句。<br>\n使用 ORM 技术可以提高代码的可维护性和可读性，因为程序员不需要了解复杂的数据库操作，只需要关注与业务逻辑相关的代码。同时，ORM\n还可以解决数据库的跨平台问题，因为 ORM 会根据不同的数据库系统自动生成合适的 SQL 语句。</p>\n</blockquote>\n<ul dir=\"auto\">\n<li>定义了一个基础的 PO 类，其中包含 ID、创建时间、更新时间以及创建人ID等基础字段，并通过<code>@JpaAuditing</code>完成自动填充</li>\n<li>逻辑删除与数据库唯一约束冲突问题 (delete_time)</li>\n</ul>\n<h5 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-接口设计\" class=\"anchor\" aria-hidden=\"true\" href=\"#接口设计\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>接口设计</h5>\n<ol dir=\"auto\">\n<li>基于 REST API 的接口设计风格</li>\n<li>通过 Validation 保证 DTO 以及 Controller层其余入参 的合法性</li>\n<li>制定统一的返回格式 <code>Res</code> (包含状态码、状态信息、数据)</li>\n<li>通过 AOP 保证 Service 层的幂等性</li>\n<li>对于所有<code>行为</code>接口，提供了 Rollback 方法</li>\n</ol>\n<h5 tabindex=\"-1\" dir=\"auto\"><a id=\"user-content-杂项\" class=\"anchor\" aria-hidden=\"true\" href=\"#杂项\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>杂项</h5>\n<ol dir=\"auto\">\n<li>完善的全局异常处理机制</li>\n<li>基于 Swagger 的 API 文档生成</li>\n</ol>\n</article>\n          </div>"
	result, _ := Translate(ctx, text, "EN", WithHTML())
	fmt.Println(result)
}
